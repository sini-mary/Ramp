{"ast":null,"code":"var _jsxFileName = \"/home/student/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked = false,\n    disabled,\n    onChange\n  } = _ref;\n  const {\n    current: inputId\n  } = useRef(`RampInputCheckbox-${id}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": checked,\n        \"RampInputCheckbox--label-disabled\": disabled\n      }),\n      htmlFor: inputId // Add this line to associate label with input\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: inputId,\n      type: \"checkbox\",\n      className: \"RampInputCheckbox--input\",\n      checked: checked,\n      onChange: () => onChange(!checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"XaNTSVvrq+AGGzCQ8+z19Jwbjfc=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["React","useRef","classNames","InputCheckbox","id","checked","disabled","onChange","current","inputId"],"sources":["/home/student/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { InputCheckboxComponent } from \"./types\";\n\nexport const InputCheckbox: InputCheckboxComponent = ({ id, checked = false, disabled, onChange }) => {\n  const { current: inputId } = useRef(`RampInputCheckbox-${id}`);\n\n  return (\n    <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n      <label\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": checked,\n          \"RampInputCheckbox--label-disabled\": disabled,\n        })}\n        htmlFor={inputId} // Add this line to associate label with input\n      />\n      <input\n        id={inputId}\n        type=\"checkbox\"\n        className=\"RampInputCheckbox--input\"\n        checked={checked}\n        onChange={() => onChange(!checked)}\n      />\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA,OAAO,MAAMC,aAAqC,GAAG,QAAiD;EAAA;;EAAA,IAAhD;IAAEC,EAAF;IAAMC,OAAO,GAAG,KAAhB;IAAuBC,QAAvB;IAAiCC;EAAjC,CAAgD;EACpG,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBR,MAAM,CAAE,qBAAoBG,EAAG,EAAzB,CAAnC;EAEA,oBACE;IAAK,SAAS,EAAC,8BAAf;IAA8C,eAAaK,OAA3D;IAAA,wBACE;MACE,SAAS,EAAEP,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCG,OADY;QAEhD,qCAAqCC;MAFW,CAA7B,CADvB;MAKE,OAAO,EAAEG,OALX,CAKoB;;IALpB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MACE,EAAE,EAAEA,OADN;MAEE,IAAI,EAAC,UAFP;MAGE,SAAS,EAAC,0BAHZ;MAIE,OAAO,EAAEJ,OAJX;MAKE,QAAQ,EAAE,MAAME,QAAQ,CAAC,CAACF,OAAF;IAL1B;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CArBM;;GAAMF,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}